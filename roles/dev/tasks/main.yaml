---
- name: Install essential packages
  become: true
  pacman:
    name: "{{ packages_to_install }}"
    state: present

- name: Setup dotfiles
  block:
    - name: Clone dotfiles repository
      git:
        repo: https://github.com/talis-fb/dotfiles.git
        dest: /home/{{ ansible_user_id }}/.dotfiles
        clone: true
        update: true

    - name: Put dotfiles symlinks in the target paths
      command:
        cmd: stow --verbose=2 {{ item }}
        chdir: /home/{{ ansible_user_id }}/.dotfiles
      loop:
        - fish
        - git
        - neovim
        - tmux
        - tmuxp
        - kitty
        - ranger
      register: stow
      changed_when: '"--- Skipping" not in stow.stderr'

- name: Neovim - Plugin Manager
  block:
    - name: Check if Vim-Plug is already installed
      stat:
        path: /home/{{ ansible_user_id }}/.local/share/nvim/site/autoload/plug.vim
      register: file_stat
    - name: Run command if doesn't
      command: sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
      when: not file_stat.stat.exists

- name: Setup Tmux Plugin Manager - tpm
  git:
    repo: https://github.com/tmux-plugins/tpm.git
    dest: /home/{{ ansible_user_id }}/.tmux/plugins/tpm
    clone: true
    update: true

- name: Set user shell to fish
  become: true
  user:
    name: "{{ ansible_user_id }}"
    shell: /bin/fish
    generate_ssh_key: true

- name: Install Hack Nerd Fonts
  block:
    - name: ensure fonts directory
      file:
        path: "{{ lookup('env', 'HOME') }}/.local/share/fonts"
        state: directory

    - name: Hack Font exists
      shell: "ls {{ lookup('env', 'HOME') }}/.local/share/fonts/Hack*Nerd*Font*Complete*"
      register: hack_exists
      ignore_errors: true

    - name: Download Hack
      when: hack_exists is failed
      unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Hack.zip
        dest: "{{ lookup('env', 'HOME') }}/.local/share/fonts/"
        remote_src: true

# - name: Setup pyenv
#   block:
#     - name: Check if pyenv is installed
#       stat:
#         path: /home/{{ ansible_user_id }}/.pyenv
#       register: file_stat
#     - name: Run command if doesn't
#       block:
#         - name: Install Pyenv
#           shell: curl https://pyenv.run | bash
#         - name: Setup it to fish 1
#           shell: set -Ux PYENV_ROOT $HOME/.pyenv
#         - name: Setup it to fish 2
#           shell: set -U fish_user_paths $PYENV_ROOT/bin $fish_user_paths
#         - name: Pacman options - ILoveCandy
#           lineinfile:
#             path: /home/{{ ansible_user_id }}/.config/fish/config.fish
#             line: pyenv init - | source
#             insertafter: EOF
#       when: not file_stat.stat.exists
